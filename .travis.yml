# This is the simple Travis configuration, which is intended for use
# on applications which do not require cross-platform and
# multiple-GHC-version support. For more information and other
# options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Choose a build environment
dist: xenial

env:
  global:
  - DOCKER_REPO=235945186688.dkr.ecr.ap-southeast-2.amazonaws.com
  - secure: mx34e7ZMoGhJlobOvY8mUMIISC3dDUBDSYcb9s6BFKD5gDC1qT2nz0whmWcCQh5XlAzVcLHcEmzAWhpDoBLecRPzq+pHTJg8WwmZEpQt8NLJMvvtQwcYLls8lm3samfQUjsqY4MB4qzb2YedY7052AI7VseKxpwop2GnqM3x1FcCmYQ2DKLNiomUH2F+GpZz30VGhJKwu7RblZAES8aIr00jQ4KcuhhsWnGLf7s5B2oDa3S56HhyPvEUIeS75APu4XYxSVLhF6aNm6qgQjudAXbjAzV6YRNOAFVf/7IL6dsPVwwnPF4Nrxio76eLXE0u7ey4PK+akacxTUYAY9HP0M9TAmH+Cq3pSnDAwqZFBBXQfCZz2jC8IS9UBTIUYQU2Uo9H2hVD0zYI5OCTnsiuH1xsj1arZwSs3USanyzm6InrDUdQGx17iiwz9t3dnbEJk/aM1trCHKOEAta9Il4so3KaVtK/0GPVIC1JATYkNkgiqj1UK1lFqolGhLr/vP+jgMF9HmlzT1RGuEPPni3Upk3QMQZBIoC3r+kxAnlGJ54wgUCYjeNMoTsLK9Cf9vaZhhpDPjuOhiFlGKEVdw2vVjQ4ZDyk0RSK0uBrOY6R3RnrO+AOmAhYO7fWGvjRR5yNIR9UFJbg3mIZ3T3jauMjuPPplfbqGzS13gFkzbxMcbk=
  - secure: k9mPDnNDPA2LKE+u+Z8hDNAdRxD0WiOqbxHRKArX7TuQZRUhznvtMcMYtSv5aF2iL8c8M9814Et2mXoJOage/Wcup8WVZeA403cS7qogt3/gJLZ8Tz1ZkOyt8d7fs6xAYIowqM0qzoqRJ8V9TcjFVmJ3p3hZjzbl/meHF4hsnHYYP2XLzAKyBqepTjCIriD/zOk+P4uF1U7XwCVwfqNdsRjw8VmI/uEZyYX1ekscxf4AJM67kDmYeojcPf/R8h6ufEcTExL7tweQZ6ypXQVjCGJIalb1NsPhfRFJ9f/8Ti4r3Gsq/2KO4JKKW8pu5sf1rx3QZD5jxK57BDXd/cqV94ejU4mBo9cYHxQZ73A2aqMa0PkXBuAF24DpFoRkvamb9aDk30qOxrTmMSZ8Oee1KUlYhtsOtt3Qhm7qjvS6PUoTYJJqKXLK0VsjCyynt20RUH+6p94uNEgrETxDCIVYzS4Eethx1N6GqxKKs1V8cKopwC3C+kJLsYCtVBR/sDxS1IcbnJ7nojNDFr6O6ize5vH7arUiuBmD23ojPIXqL/VFew4RFlD9FsObrVQOqXRneIDOCxNuLBr5+Vsg3/UkMQqZVvUtENszvpPAr5mac92vLLCcwZZoUai7Zj17XZtDi83wyJoHgQboBJbDAv69TQZFZXTNKUhSHiua1ZsYcNo=

# Do not choose a language; we provide our own build tools.
language: generic

services:
  - postgresql

# Caching so the next build will be fast too.
cache:
  timeout: 4000
  directories:
  - $HOME/.stack
  - .stack-work

# Ensure necessary system libraries are present
addons:
  apt:
    packages:
      - libgmp-dev

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- wget -qO- https://get.haskellstack.org/ | sh
- curl -fsSL https://get.docker.com -o get-docker.sh | sh

install:
# Build dependencies
- stack --no-terminal --install-ghc test --only-dependencies

script:
# Build the package, its tests, and its docs and run the tests
- stack --no-terminal build --fast --copy-bins
- psql -c 'CREATE DATABASE testsupplychainserver;' -U postgres
- psql -c 'CREATE DATABASE testbusinessregistry;' -U postgres
- stack exec supplyChainServer -- --init-db -c 'dbname=testsupplychainserver'
- echo 'YES' | stack exec businessRegistry -- initdb -c 'dbname=testbusinessregistry'
- ./run_tests.sh --no-terminal
# Package and Deploy the docker images
- pip install --user awscli
- export PATH=$PATH:$HOME/.local/bin
- eval $(aws ecr get-login --no-include-email --region ap-southeast-2)
- docker build -f Mirza.Dockerfile --target PKG-SCS -t ${DOCKER_REPO}/supplychainserver:$TRAVIS_COMMIT .
- docker build -f Mirza.Dockerfile --target PKG-BR -t ${DOCKER_REPO}/businessregistry:$TRAVIS_COMMIT .
- docker push ${DOCKER_REPO}/supplychainserver:$TRAVIS_COMMIT
- docker push ${DOCKER_REPO}/businessregistry:$TRAVIS_COMMIT