version: "3"

networks:
  frontend:
  backend:

services:
  web:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/mirza-web:latest
    ports:
      - 80:80
    restart: always
    depends_on:
      - orgRegistry
    networks:
      - frontend
      - backend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci054edapi:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/edapi:latest
    restart: always
    env_file:
      - sci054.env
    depends_on:
      - db
      - sci054scs
    networks:
      - backend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
        
  sci054scs:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    restart: always
    env_file:
      - sci054.env
    depends_on:
      - db
    networks:
      - backend
    command: --orhost or --orport 8200 --init-db -c "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/sci054supplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
        
  sci041edapi:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/edapi:latest
    restart: always
    env_file:
      - sci041.env
    depends_on:
      - db
      - sci041scs
    networks:
      - backend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
        
  sci041scs:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    restart: always
    env_file:
      - sci041.env
    depends_on:
      - db
    networks:
      - backend
    command: --orhost or --orport 8200 -c "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/sci041supplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci042edapi:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/edapi:latest
    restart: always
    env_file:
      - sci040.env
    depends_on:
      - db
      - sci042scs
    networks:
      - backend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
        
  sci042scs:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    restart: always
    env_file:
      - sci042.env
    depends_on:
      - db
    networks:
      - backend
    command: --orhost or --orport 8200 -c --init-db "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/sci042supplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci033edapi:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/edapi:latest
    restart: always
    env_file:
      - sci033.env
    depends_on:
      - db
      - sci033scs
    networks:
      - backend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci033scs:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    restart: always
    env_file:
      - sci033.env
    depends_on:
      - db
    networks:
      - backend
    command: --orhost localhost --orport 8200 -c "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/sci033supplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  orgRegistry:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/orgregistry:latest
    env_file:
      - .env
    restart: always
    depends_on:
      - db
    networks:
      - backend
    command: -c 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/devorgregistry' server -a "${OAUTH_SUB}"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  db:
    image: postgres:10.5
    env_file:
      - .env
    networks:
      - backend
    healthcheck:
       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
       interval: 30s
       timeout: 10s
       retries: 5
    restart: always
    volumes:
      - ./create_databases.sh:/docker-entrypoint-initdb.d/create_databases.sh
      - /opt/Mirza/postgresql/data:/var/lib/postgresql/data
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
