version: "3"

networks:
  frontend:
  backend:

volumes:
  private-ethereum-blockchain:

services:

  web:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/mirza-web:latest
    ports:
      - 80:80
    restart: always
    depends_on:
      - orgRegistry
      - sci033EDAPI
      - supplyChainServer
    networks:
      - frontend
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  supplyChainServer:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    ports:
      - 8000:8000
    links:
      - orgRegistry:or
    restart: always
    depends_on:
      - db
    networks:
      - frontend
      - backend
    env_file:
      - .env
    command: --orhost or --orport 8200 -c "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/devsupplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci033EDAPI:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/edapi:latest
    restart: always
    depends_on:
      - db
      - sci033SCS
    networks:
      - frontend
      - backend
    env_file:
      - .env
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  sci033SCS:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    ports:
      - 8501:8000
    restart: always
    depends_on:
      - db
    networks:
      - frontend
      - backend
    env_file:
      - .env
    command: --orhost localhost --orport 8200 -c "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/sci033supplychainserver"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  orgRegistry:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/orgregistry:latest
    ports:
      - 8200:8200
    restart: always
    depends_on:
      - db
    networks:
      - frontend
      - backend
    env_file:
      - .env
    command: -c 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/devorgregistry' server -a "${OAUTH_SUB}"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  db:
    image: postgres:10.5
    networks:
      - backend
    env_file:
      - .env
    healthcheck:
       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
       interval: 30s
       timeout: 10s
       retries: 5
    restart: always
    volumes:
      - ./create_databases.sh:/docker-entrypoint-initdb.d/create_databases.sh
      - /opt/Mirza/postgresql/data:/var/lib/postgresql/data
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  dbpopulate-scs:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/supplychainserver:latest
    networks:
      - backend
    links:
      - supplyChainServer:scs
      - orgRegistry:or
    env_file:
      - .env
    entrypoint: /bin/sh -c "cd /opt/Mirza && ./supplyChainServer --init-db -c 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/devsupplychainserver' && ./supplyChainServer --username '${OR_USER}' --password '${OR_PASSWORD}' --scshost scs --orhost or --orport 8200"
    depends_on:
      - db
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  dbpopulate-or:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/orgregistry:latest
    networks:
      - backend
    env_file:
      - .env
    entrypoint: /bin/sh -c "echo 'YES' | /opt/Mirza/orgRegistry initdb -c 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/devorgregistry'"
    depends_on:
      - db
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"

  private-ethereum-blockchain:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/privateethereumblockchain:191f2b7e145a02004c8e9e871e92d989c7ec69c7
    ports:
      - '8545:8545'
      - '8546:8546'
    volumes:
      - private-ethereum-blockchain:/root/.local/share/io.parity.ethereum
    networks:
      - backend

  blockchain-api-server:
    image: 235945186688.dkr.ecr.ap-southeast-2.amazonaws.com/blockchainapiserver:191f2b7e145a02004c8e9e871e92d989c7ec69c7
    ports:
      - '5000:5000'
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      - private-ethereum-blockchain
